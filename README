DAN-DOMINIC STAICU 311CA 2023
Homework 3 of PCLP1

VERSION CONTROL

commit 1: initial commit
	*added empty README

commit 2: added makefile and main file
	*added empty main image_editor.c
	*added makefile

commit 3: maybe LOAD works
	*added command input from stdin
	*created hashing for commands in order to use switch
	*created struct for memorising the loaded photo
	*implemented basic LOAD
	*can open a file
	*checks if file exists
	*error handling if doesn't exit
	*check and remember photo type
	*hashing for photo type
	*can load a photo regardless it's type

commit 4: work in progress on SAVE
	*solved memory leak of not closing the file when loading
	*added succes message for loading
	*added no image loaded error
	*implemented new PROBLEM with getchar(), 
	which cannot be called at the end of any case
	*refactor - eliminated query file
	*work in progress on SAVE

commit 5: loading and saving works with 3 known bugs
	*loading and saving working 
	*implemented (Bug) feature with loading as P6 with wrong colours
	*after reading SAVE with only one parameter an extra \n is displayed
	*names of saved documents just aren't ok

commit 6: solved bugs from LOAD and SAVE
	*solved file names bugs
	*solved colour bug

commit 7: implemented SELECT (ALL)
	*implemented SELECT
	*select splits in SELECT ALL and SELECT <coords>
	*order of coords can be descending

commit 8: implemented histogram
	*I THINK I implemented it, not sure yet, no checker was published

commit 9: EQUALIZE
	*implemented EQUALIZE
	*created function for EXIT
	*some cleaning

commit 10: working on CROP
	*redone selection logic
	*reminder to implement loading ignoring #comments
	*CROP seg fault for colour photos
	*CROP selecting +1 more pixels thant requested

commit 11: CROP and SELECT in development
	*maybe messed up crop and select

commit 12: fixed SELECT logic and CROP
	*maybe fixed CROP and SELECT

commit 13: working on APPLY
	*CHECKER WAS PUBLISHED
	*repaired select logic
	*apparantly SELECT and CROP are working
	*work in progress on apply

commit 14: refactor RGB
	*refactored logic for RGB photos
	*in order to have 3 columns in a greater matrix for each value, now it
	saves 3 matrixes with the exact number of lins and cols, one for each color channel

commit 15: APPLY in development
	*created functions for every kind of APPLY
	*implemented new BUGS
	*created mutual funcrtions to aplly any kind of kernel in the same way

commit 16: fixed APPLY
	*fixed EDGE and SHARPEN
	*fixed APPLY without parameter bug
	*TODO run with valgrind